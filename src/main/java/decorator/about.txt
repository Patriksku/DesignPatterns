* The Decorator allows you to modify an object dynamically.
* You would use it when you want the capabilities of inheritance with subclasses,
    but you need to add functionality at run time.
* It is more flexible than inheritance.
* Simplifies code because you add functionality using many simple classes.
* Rather than rewrite old code, you can extend with new code.

Inheritance is static. What we are using in this pattern is composition, which is dynamic.

Check 'TomatoSauce.java' for more information on pros/cons of this design pattern.