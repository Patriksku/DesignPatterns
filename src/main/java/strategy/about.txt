* When you want to define a class that will have on behavior that is similar to other behaviors in a list.

* Ex, I want the class object to be able to choose from:
    - Not flying
    - Fly with wings
    - Fly super-fast

*  When you need to use one of several behaviors dynamically.


-> Often reduces long lists of conditionals
-> Avoids duplicate code
-> Keeps class changes from forcing other class changes
-> Can hide complicated / secret code from the user

Negative: Increase number of objects / classes.